@model MobileSurveillanceWebApplication.Models.ViewModel.ListTrajectoryViewModel
@{
    ViewBag.Title = "ListTrajectory";
    var searchUserModel = (MobileSurveillanceWebApplication.Models.ViewModel.TrajectSearchCriteriaViewModel)ViewBag.SearchCriteriaViewModel;
}

<script>
    var currentTraject;
    $(document).ready(function () {
        $(".btn-edit").click(function () {

            var id = $(this).parent().attr('id');
            currentTraject = id;
            $.getJSON("/User/GetCountItems", {}, function (data) {
                $("#name").val(data.TrajectoryName);
                $("#description").val(data.Description);
                $("#status").val(data.Status);
            })
        });

        $(".btn-save").click(function () {
            var id = currentTraject;
            var Tname = $("#name").val();
            var Tdescription = $("#description").val();
            var Tstatus = $('#status :selected').text();
            $.getJSON("/Trajectory/SaveTrajectory", { trajectId: id, name: Tname, description: Tdescription, status: Tstatus }, function (data) {
                alert(data);
            })
            $("#myModal").modal('hide');
        });

    });

    function onProductDeleteSuccess(response, status, data) {
        var id = "#" + response.id;
        $(id).hide(500, function () {
            $(id).remove();
        });
    }

    function onProductDeleteFailure() {
        alert('Something went wrong, please try again!');
    }
</script>



<div>

    @{
        Html.RenderPartial("~/Views/Profile/UserProfile.cshtml", Model.UserViewModel);
    }

    @using (Html.BeginForm("ListTrajectory", "Trajectory", FormMethod.Post, new { @role = "search" }))
    {
        <div class="row">
            <div class="col-lg-6">
                <div class="input-group">
                    <div class="form-group">
                        <input type="text" name="SearchKeyword" class="form-control" placeholder="Search" value="@searchUserModel.SearchKeyword">
                        <input type="hidden" name="UserId" value="@searchUserModel.UserId" />
                        <input type="hidden" name="PageNumber" value="1" />
                        <input type="hidden" name="PageCount" value="0" />
                        <input type="hidden" name="DateFrom" value="@searchUserModel.DateFrom" />
                        <input type="hidden" name="DateTo" value="@searchUserModel.DateTo" />
                    </div>
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-default">Search</button>
                    </span>
                </div><!-- /input-group -->
            </div><!-- /.col-lg-6 -->
        </div>

    }
    @foreach (var item in Model.ListTrajectory)
    {
        <div class="row" id="@item.Id" style="border-bottom:solid 1px #cccccc; padding:15px 10px; float:left">


            <div class="col-md-3" style="height: 260px; width: 410px; border: solid #cccccc 1px; padding: 5px; display: inline-block;">
                <img src="http://maps.googleapis.com/maps/api/staticmap?center=@item.Latitude,@item.Longitude&markers=@item.Latitude,@item.Longitude&zoom=13&size=400x250&sensor=true" alt="Mobile Surveyllance">
            </div>
            <div class="col-md-2" style="height: 260px; width: 300px; padding: 5px; display: inline-block; margin-left:20px">
                <div class="row">
                    <table class="table-condensed">
                        <tr><td><h3>@Html.ActionLink(@item.TrajectoryName, "ViewDetail", new { trajectoryId = item.Id })</h3></td></tr>
                        <tr><td>Description: @item.Description</td></tr>
                        <tr><td>Created date: @item.CreateDate</td></tr>
                        <tr><td>Last updated: @item.LastUpdate</td></tr>
                    </table>
                </div>
                <div class="row" style="bottom:20px; height:20px; position:absolute">

                    <!-- Button trigger modal -->
                    <button class="btn btn-primary btn-md btn-edit" data-toggle="modal" data-target="#myModal">
                        Edit <span class="glyphicon glyphicon-pencil"></span>
                    </button>

                    @Ajax.ActionLink("Delete", "Delete", new { trajectoryId = item.Id }, new AjaxOptions()
            {
                Confirm = "Are you sure you want to delete this trajectory?",
                HttpMethod = "DELETE",
                OnSuccess = "onProductDeleteSuccess",
                OnFailure = "onProductDeleteFailure",
            }, new { @class = "btn btn-danger" })
                </div>
            </div>




            <!-- Modal -->
            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title" id="myModalLabel">Modify trajectory</h4>
                        </div>
                        <div class="modal-body">
                            <form>
                                Name: <input type="text" class="form-control" id="name" /> <br />
                                Description: <input type="text" class="form-control" id="description" /> <br />
                                Status: <select id="status" class="form-control">
                                    <option value="Public">
                                        Public
                                    </option>
                                    <option value="Private">
                                        Private
                                    </option>
                                </select>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            @Ajax.ActionLink("Save", "Save", new { trajectoryId = item.Id }, new AjaxOptions()
            {

                HttpMethod = "POST",
                OnSuccess = "onProductSaveSuccess",
                OnFailure = "onProductSaveFailure",
            }, new { @class = "btn btn-primary btn-save" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }

    <!-- Pagination-->
    <div class="row" style="text-align: center;clear:both">
        <div style="text-align: left; display: inline-block; /* for ie6/7: */ *display: inline; zoom: 1;">
            <ul class="pagination">

                <li>@Html.ActionLink("First", "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = 1, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                @if (searchUserModel.PageNumber > 1)
                {
                    <li>@Html.ActionLink("<<", "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber - 1, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                }
                @if (searchUserModel.PageCount > 5)
                {
                    int firstSegmentLength = 3;
                    while (searchUserModel.PageNumber - firstSegmentLength < 0)
                    {
                        firstSegmentLength--;
                    }

                    int lastSegment = searchUserModel.PageNumber + 3;


                    if (lastSegment > searchUserModel.PageCount)
                    {
                        lastSegment = searchUserModel.PageCount;
                    }

                    for (int i = searchUserModel.PageNumber - firstSegmentLength + 1; i < searchUserModel.PageNumber; i++)
                    {
                        <li>@Html.ActionLink((i).ToString(), "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                    }
                    <li class="active">@Html.ActionLink((searchUserModel.PageNumber).ToString(), "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                    for (int i = searchUserModel.PageNumber + 1; i <= lastSegment + 3 - firstSegmentLength; i++)
                    {
                        <li>@Html.ActionLink((i).ToString(), "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                    }
                }
                else
                {
                    for (int i = 1; i <= searchUserModel.PageCount; i++)
                    {
                        if (i == searchUserModel.PageNumber)
                        {
                            <li class="active">@Html.ActionLink((i).ToString(), "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                        }
                        else
                        {
                            <li>@Html.ActionLink((i).ToString(), "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                        }
                    }
                }
                @if (searchUserModel.PageNumber < searchUserModel.PageCount)
                {
                    <li>@Html.ActionLink(">>", "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber + 1, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
                }
                <li>@Html.ActionLink("Last", "ListTrajectory", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageCount, PageCount = searchUserModel.PageCount, UserId = searchUserModel.UserId, DateFrom = searchUserModel.DateFrom, DateTo = searchUserModel.DateTo })</li>
            </ul>
        </div>
    </div>
</div>


