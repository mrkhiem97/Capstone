@model MobileSurveillanceWebApplication.Models.ViewModel.TrajectoryViewModel
<script src="@Url.Content("~/Scripts/amcharts/amcharts.js")"></script>
<script src="@Url.Content("~/Scripts/amcharts/serial.js")"></script>
<!-- scripts for exporting chart as an image -->
<!-- Exporting to image works on all modern browsers except IE9 (IE10 works fine) -->
<!-- Note, the exporting will work only if you view the file from web server -->
<!--[if (!IE) | (gte IE 10)]> -->
<script src="@Url.Content("~/Scripts/amcharts/exporting/amexport.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/amcharts/exporting/canvg.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/amcharts/exporting/filesaver.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/amcharts/exporting/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/amcharts/exporting/jspdf.plugin.addimage.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/amcharts/exporting/rgbcolor.js")" type="text/javascript"></script>

<!-- <![endif]-->
<script type="text/javascript">
    var chart;
    var graph;
    $(document).ready(function () {
        $("#summary-report").hide();
        $.getJSON("/Report/GetReportDataForMobile/", { trajectoryId: '@Model.Id' }, function (responseData) {
            var chartData = responseData.ChartData;

            $("#report-trajectory-name").text("Trajectory: " + responseData.TrajectoryName);
            $("#report-trajectory-author").text("Author: " + responseData.Author);
            $("#total-distance").text("Total Distances: " + chartData[chartData.length - 1].TotalDistance + " Kilometers");
            $("#total-location").text("Total Locations: " + "@Model.TotalLocation");
            $("#total-time").text("Total Time: " + "@Model.TotalTime");
            // SERIAL CHART
            chart = new AmCharts.AmSerialChart();
            chart.pathToImages = "@Url.Content("~/Scripts/amcharts/images/")";
            chart.dataProvider = chartData;
            chart.marginLeft = 10;
            chart.categoryField = "TakenDate";
            chart.allLabels = [
                { "x": 50, "y": 50, "text": responseData.TrajectoryName, "align": "center", "size": 24, "color": "#0066CC", "alpha": 1, "rotation": 0, "bold": true, "url": "@Url.Action("ViewDetail", "Trajectory", new { trajectoryId = Model.Id})" },
                { "x": 50, "y": 80, "text": "@Model.CreateDate", "align": "center", "size": 16, "color": "#0066CC", "alpha": 1, "rotation": 0, "bold": true, "url": "@Url.Action("ViewDetail", "Trajectory", new { trajectoryId = Model.Id})" }
            ];

            // AXES
            // category
            var categoryAxis = chart.categoryAxis;
            categoryAxis.dashLength = 3;
            categoryAxis.minorGridEnabled = true;
            categoryAxis.minorGridAlpha = 0.1;
            categoryAxis.autoWrap = true;
            categoryAxis.offset = 20;
            categoryAxis.title = "Time Line";

            // value
            var valueAxis = new AmCharts.ValueAxis();
            valueAxis.axisAlpha = 0;
            valueAxis.inside = true;
            valueAxis.dashLength = 10;
            valueAxis.title = "Distance";
            chart.addValueAxis(valueAxis);

            // GRAPH 2
            graph1 = new AmCharts.AmGraph();
            graph1.type = "smoothedLine"; // this line makes the graph smoothed line.
            graph1.lineColor = "#d1655d";
            //graph.bullet = "round";
            graph1.bulletSize = 32;
            graph1.bulletOffset = 20;
            graph1.bulletBorderColor = "#FFFFFF";
            graph1.bulletBorderAlpha = 1;
            graph1.bulletBorderThickness = 2;
            graph1.lineThickness = 3;
            graph1.valueField = "Distance";
            graph1.customBulletField = "Marker";
            graph1.balloonText = "<span style='color:red; font-size:10px'>[[category]]</span>" +
                "<br><b><span style='font-size:13px;'>Location: [[LocationNumber]]</span></b>" +
                "<br><b><span style='font-size:13px;'>Velocity: [[Velocity]] Km/h</span></b>" +
                "<br><b><span style='font-size:13px;'>Distance: [[value]] Km</span></b>" +
                "<br><b><span style='font-size:13px;'>Time Interval: [[TimeInterval]]</span></b>" +
                "<br><b><span style='font-size:13px;'>GPS: ([[Latitude]], [[Longitude]])</span></b>" +
                "<br><b><span style='font-size:13px;'>Address: [[Address]]</span></b>";
            chart.addGraph(graph1);


            // GRAPH 2
            graph2 = new AmCharts.AmGraph();
            graph2.type = "smoothedLine"; // this line makes the graph smoothed line.
            graph2.lineColor = "#3333FF";
            //graph.bullet = "round";
            graph2.bulletSize = 32;
            graph2.bulletOffset = 20;
            graph2.bulletBorderColor = "#FFFFFF";
            graph2.bulletBorderAlpha = 1;
            graph2.bulletBorderThickness = 2;
            graph2.lineThickness = 4;
            graph2.valueField = "TotalDistance";
            graph2.customBulletField = "Marker";
            graph2.balloonText = null;
            graph2.balloonText = "<span style='color:red; font-size:10px'>[[category]]</span>" +
                "<br><b><span style='font-size:13px;'>Location: [[LocationNumber]]</span></b>" +
                "<br><b><span style='font-size:13px;'>Total Time: [[TotalTime]]</span></b>" +
                "<br><b><span style='font-size:13px;'>Total Distance: [[TotalDistance]] Km</span></b>";
            chart.addGraph(graph2);

            // CURSOR
            var chartCursor = new AmCharts.ChartCursor();
            chartCursor.cursorAlpha = 0;
            chartCursor.cursorPosition = "mouse";
            chart.addChartCursor(chartCursor);

            // SCROLLBAR
            var chartScrollbar = new AmCharts.ChartScrollbar();
            chart.addChartScrollbar(chartScrollbar);

            chart.creditsPosition = "bottom-right";

            chart.exportConfig = {
                menuTop: "80px",
                menuBottom: "auto",
                menuRight: "20px",
                backgroundColor: "#efefef",

                menuItemStyle: {
                    backgroundColor: '#EFEFEF',
                    rollOverBackgroundColor: '#DDDDDD'
                },

                menuItems: [{
                    textAlign: 'center',
                    icon: '@Url.Content("~/Scripts/amcharts/images/export.png")',
                    onclick: function () { },
                    iconTitle: 'Save chart as an image',
                    items: [{
                        title: 'JPG',
                        format: 'jpg'
                    }, {
                        title: 'PNG',
                        format: 'png'
                    }, {
                        title: 'SVG',
                        format: 'svg'
                    }, {
                        title: 'PDF',
                        format: 'pdf'
                    }]
                }]
            };

            // WRITE
            chart.write("chartdiv");
            $("#summary-report").show();
        });
    });
</script>
<div class="col-lg-6 col-md-6 col-sm-12">
    <div id="summary-report" class="alert alert-warning summary-report">
        <div id="report-trajectory-name">
        </div>
        <div id="report-trajectory-author">
        </div>
        <div id="total-location">
        </div>
        <div id="total-distance">
        </div>
        <div id="total-time">
        </div>
    </div>
</div>
<div class="col-lg-6 col-md-6 col-sm-12">
    @using (Html.BeginForm("ExcelReport", "Report", FormMethod.Post, new { enctype = "multipart/form-data", id = "report-download-form" }))
    {
        <input type="hidden" name="trajectoryId" value="@Model.Id" />
        <input class="download-report" type="submit" name="Export" id="Export" value="" />
    }
</div>
<div id="chartdiv" style="width: 90%; height: 550px; margin-left: 18px; margin-right: auto;"></div>
