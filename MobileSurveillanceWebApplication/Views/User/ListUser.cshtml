@model MobileSurveillanceWebApplication.Models.ViewModel.ListUserViewModel

@{
    ViewBag.Title = "Friend List";
    var searchUserModel = (MobileSurveillanceWebApplication.Models.ViewModel.SearchCriteriaViewModel)ViewBag.SearchCriteriaViewModel;
}

<h2>Friend List</h2>
@using (Html.BeginForm("ListUser", "User", FormMethod.Post, new { @role = "search" }))
{
    <div class="row">
        <div class="col-lg-6">
            <div class="input-group">
                <div class="form-group">
                    <input type="text" name="SearchKeyword" class="form-control" placeholder="Search" value="@searchUserModel.SearchKeyword">
                    <input type="hidden" name="PageNumber" value="1" />
                    <input type="hidden" name="PageCount" value="0" />
                </div>
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default">Search</button>
                </span>
            </div><!-- /input-group -->
        </div><!-- /.col-lg-6 -->
    </div>

}


    @foreach (var item in Model.ListUser)
    {
    <!-- Thumbnail User-->

        <div class="col-sm-6 col-md-4">
            <div class="thumbnail">
                <img src="@item.Avatar" alt="Nang" class="img-thumbnail traject-thumb">
                <div class="caption">
                    <h3>@Html.ActionLink(item.Fullname, "ListFriendTrajectory", "User", new { friendId = @item.Id }, htmlAttributes: new { @class = "" })</h3>
                    <p>
                        @Html.ActionLink("Track User", "ListFriendTrajectory", "User", new { friendId = @item.Id }, htmlAttributes: new { @class = "btn btn-success" })                                               
                    </p>
                </div>
            </div>

        </div>   
    }

<!-- Pagination-->
<div class="row">
    <ul class="pagination pagination-lg">

        <li>@Html.ActionLink("First", "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = 1, PageCount = searchUserModel.PageCount })</li>
        @if (searchUserModel.PageNumber > 1)
        {
            <li>@Html.ActionLink("<<", "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber - 1, PageCount = searchUserModel.PageCount })</li>
        }
        @if (searchUserModel.PageCount > 5)
        {
            int firstSegmentLength = 3;
            while (searchUserModel.PageNumber - firstSegmentLength < 0)
            {
                firstSegmentLength--;
            }

            int lastSegment = searchUserModel.PageNumber + 3;


            if (lastSegment > searchUserModel.PageCount)
            {
                lastSegment = searchUserModel.PageCount;
            }

            for (int i = searchUserModel.PageNumber - firstSegmentLength + 1; i < searchUserModel.PageNumber; i++)
            {
                <li>@Html.ActionLink((i).ToString(), "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount })</li>
            }
            <li class="active">@Html.ActionLink((searchUserModel.PageNumber).ToString(), "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount })</li>
            for (int i = searchUserModel.PageNumber + 1; i <= lastSegment + 3 - firstSegmentLength; i++)
            {
                <li>@Html.ActionLink((i).ToString(), "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount })</li>
            }
        }
        else
        {
            for (int i = 1; i <= searchUserModel.PageCount; i++)
            {
                if (i == searchUserModel.PageNumber)
                {
                    <li class="active">@Html.ActionLink((i).ToString(), "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount })</li>
                }
                else
                {
                    <li>@Html.ActionLink((i).ToString(), "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount })</li>
                }
            }
        }
        @if (searchUserModel.PageNumber < searchUserModel.PageCount)
        {
            <li>@Html.ActionLink(">>", "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber + 1, PageCount = searchUserModel.PageCount })</li>
        }
        <li>@Html.ActionLink("Last", "ListUser", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageCount, PageCount = searchUserModel.PageCount })</li>
    </ul>

</div>
