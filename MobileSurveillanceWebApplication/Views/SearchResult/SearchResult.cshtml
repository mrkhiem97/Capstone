@model MobileSurveillanceWebApplication.Models.ViewModel.ListFriendViewModel
@{
    ViewBag.Title = "SearchResult";
    var searchUserModel = (MobileSurveillanceWebApplication.Models.ViewModel.SearchCriteriaViewModel)ViewBag.SearchCriteriaViewModel;
}

<script>
    function onSuccess(response, status, data) {
        window.location = "?SearchKeyword=" + response.SearchKeyword + "&PageNumber=" + response.PageNumber + "&PageCount=" + response.PageCount;
    }


    function onFailure() {
        alert('Something went wrong, please try again!');
    }
</script>

<div class="row" style="margin-left: 0px">
    @if (ViewBag.SearchUserCount > 0)
    {
        <div class="alert alert-info" style="margin-top: 25px; margin-left: 18px; width: 600px"><h4><b>Search returns @ViewBag.SearchUserCount people of "@searchUserModel.SearchKeyword"</b></h4></div>
    }
    else
    {
        <div class="alert alert-info" style="margin-top: 25px; margin-left: 18px; width: 600px"><h4><b>There is no people "@searchUserModel.SearchKeyword" in the system</b></h4></div>
    }
</div>
<div class="row" style="margin-left: 0px">
    @foreach (var item in Model.ListFriend)
    {
    <!-- Listing User-->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-6">
            <div class="list-thumb">
                <div class="row" align="center">
                    <img src="@item.Avatar" alt="Mobile Surveillance" class="avatar-thumbnail">
                </div>
                <div class="row" align="center">
                    <h4>@Html.ActionLink(item.Fullname, "ListFriendTrajectory", "User", new { friendId = @item.Id }, htmlAttributes: new { @class = "" })</h4>
                </div>
                <div class="row" align="center">
                    @switch (item.FriendStatus)
                    {
                        case "notFriend":
                            <h4>
                                @Ajax.ActionLink("Add Friend", "AddFriend", new { friendId = item.Id, requestType = "addFriend", SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount }, new AjaxOptions()
                                    {
                                        HttpMethod = "POST",
                                        OnSuccess = "onSuccess",
                                        OnFailure = "",
                                    }, new { @class = "label label-primary" })
                            </h4>
                            break;

                        case "requestSent":
                        <h4>
                            @Ajax.ActionLink("Cancel Request", "CancelRequest", new { friendId = item.Id, SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount }, new AjaxOptions()
                                    {
                                        HttpMethod = "POST",
                                        OnSuccess = "onSuccess",
                                        OnFailure = "",
                                    }, new { @class = "label label-danger" })
                        </h4>
                            break;

                        case "confirmNeed":
                        <h4>
                            @Ajax.ActionLink("Accept Request", "AddFriend", new { friendId = item.Id, requestType = "confirmRequest", SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount }, new AjaxOptions()
                                   {
                                       HttpMethod = "POST",
                                       OnSuccess = "onSuccess",
                                       OnFailure = "",
                                   }, new { @class = "label label-primary" })

                            @Ajax.ActionLink("Deny Request", "DenyRequest", "SearchResult", new { friendId = @item.Id, requestType = "denyRequest", SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount }, new AjaxOptions()
                                   {
                                       HttpMethod = "POST",
                                       OnSuccess = "onSuccess",
                                       OnFailure = "",
                                   }, new { @class = "label label-warning" })
                        </h4>
                            break;

                        default:
                        <h4>
                            @Html.ActionLink("Track User", "ListFriendTrajectory", "User", new { friendId = @item.Id }, htmlAttributes: new { @class = "label label-success" })
                        </h4>
                            break;
                    }
                </div>
            </div>
        </div>
    }
</div>
<!-- Paging-->
<div class="row" style="text-align: center;clear:both">
    <div style="text-align: left; display: inline-block; /* for ie6/7: */ *display: inline; zoom: 1;">
        <ul class="pagination">

            <li>@Html.ActionLink("First", "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = 1, PageCount = searchUserModel.PageCount })</li>
            @if (searchUserModel.PageNumber > 1)
            {
                <li>@Html.ActionLink("<<", "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber - 1, PageCount = searchUserModel.PageCount })</li>
            }
            @if (searchUserModel.PageCount > 5)
            {
                int firstSegmentLength = 3;
                while (searchUserModel.PageNumber - firstSegmentLength < 0)
                {
                    firstSegmentLength--;
                }

                int lastSegment = searchUserModel.PageNumber + 3;


                if (lastSegment > searchUserModel.PageCount)
                {
                    lastSegment = searchUserModel.PageCount;
                }

                for (int i = searchUserModel.PageNumber - firstSegmentLength + 1; i < searchUserModel.PageNumber; i++)
                {
                    <li>@Html.ActionLink((i).ToString(), "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount })</li>
                }
                <li class="active">@Html.ActionLink((searchUserModel.PageNumber).ToString(), "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount })</li>
                for (int i = searchUserModel.PageNumber + 1; i <= lastSegment + 3 - firstSegmentLength; i++)
                {
                    <li>@Html.ActionLink((i).ToString(), "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount })</li>
                }
            }
            else
            {
                for (int i = 1; i <= searchUserModel.PageCount; i++)
                {
                    if (i == searchUserModel.PageNumber)
                    {
                        <li class="active">@Html.ActionLink((i).ToString(), "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber, PageCount = searchUserModel.PageCount })</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink((i).ToString(), "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = i, PageCount = searchUserModel.PageCount })</li>
                    }
                }
            }
            @if (searchUserModel.PageNumber < searchUserModel.PageCount)
            {
                <li>@Html.ActionLink(">>", "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageNumber + 1, PageCount = searchUserModel.PageCount })</li>
            }
            <li>@Html.ActionLink("Last", "SearchResult", new { SearchKeyword = searchUserModel.SearchKeyword, PageNumber = searchUserModel.PageCount, PageCount = searchUserModel.PageCount })</li>
        </ul>
    </div>
</div>
<!-- Paging-->
