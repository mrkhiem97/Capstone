@using (Html.BeginForm("SearchResult", "SearchResult", FormMethod.Post, new { @id = "search-form-bar", @role = "form", @class = "navbar-form navbar-left" }))
{
    <div class="form-group form-search">
        <input id="txtSearchAll" placeholder="People" value="" type="text" maxlength="200" name="SearchKeyword" class="form-control col-lg-9 col-md-9 search-box typeahead" />
        <i class="glyphicon glyphicon-search"></i>
        <input id="txtPageNumber" type="hidden" name="PageNumber" value="1" />
        <input id="txtPageCount" type="hidden" name="PageCount" value="0" />
    </div>
}

<script>
    $(window).load(function () {
        $('#txtSearchAll').on('submit', function (e) {
            if (e.which == 13) {
                $('#search-form-bar').submit();
            }
        });
    });
</script>
<style>
    .form-search {
        position: relative;
    }

        .form-search .search-box {
            padding-left: 30px;
        }

        .form-search i {
            position: absolute;
            top: 0;
            left: 0;
            padding: 9px 12px;
            line-height: 1.42857143;
            font-size: 15px;
            color: #a7a7a7;
        }
</style>

<script>
    $(document).ready(function () {
        $('#txtSearchAll').typeahead({
            source: function (query, process) {

                if (query.indexOf('[') > -1) {
                    query = query.replace('[', '\[');
                }
                // implementation
                var listUsers = [];
                $.getJSON("/SearchResult/GetUserList/", { query: query }, function (data) {
                    $.each(data, function (i, user) {
                        listUsers.push(user);
                    });
                    process(listUsers);
                })
            },
            updater: function (item) {
                // implementation
                $('#txtSearchAll').attr('value', item);
                return item;
            },
            matcher: function (item) {
                if (this.query.indexOf('[') > -1) {
                    this.query = this.query.replace('[', '\[');
                }
                // implementation
                if (item.toLowerCase().indexOf(this.query.toLowerCase()) != -1) {
                    return true;
                }
            },
            sorter: function (items) {
                // implementation
                return items.sort();
            },
            highlighter: function (item) {
                // implementation
                if (this.query.indexOf('[') > -1) {
                    this.query = this.query.replace('[', '\\[');
                }
                var regex = new RegExp('(' + this.query + ')', 'gi');
                return item.replace(regex, "<strong>$1</strong>");
            },
            autoSelect: false
        });
    });
</script>